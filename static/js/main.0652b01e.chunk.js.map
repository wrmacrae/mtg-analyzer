{"version":3,"sources":["components/Expandable.js","icons/Information.js","components/Rule.js","components/Checklist.js","components/Card.js","components/Pick.js","App.js","serviceWorker.js","index.js"],"names":["Expandable","state","expanded","handleToggle","bind","this","setState","props","header","children","Element","element","className","onClick","height","React","PureComponent","Icon","other","xmlns","viewBox","d","Rule","width","name","description","performance","performanceMethod","target","PERFORMANCE_METHOD","MINIMUM","MAXIMUM","BOOLEAN","console","log","color","Math","max","min","style","backgroundColor","ref","createRef","Information","Checklist","Card","link","data-tip","data-for","href","id","place","effect","src","Pick","higherLink","higherName","pickedLink","pickedName","rules","push","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0652b01e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimateHeight from 'react-animate-height';\n\nimport './Expandable.scss';\n\nclass Expandable extends React.PureComponent {\n  static propTypes = {\n    header: PropTypes.node.isRequired,\n    children: PropTypes.node.isRequired,\n    element: PropTypes.string,\n    className: PropTypes.string,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      expanded: false,\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    this.setState({\n      expanded: !this.state.expanded,\n    });\n  }\n  expand() {\n    this.setState({\n      expanded: true,\n    });\n  }\n\n  render() {\n    const { header, children, element: Element, className } = this.props;\n\n    return (\n      <Element className={`expandable ${this.state.expanded ? 'expanded' : ''} ${className || ''}`}>\n        <div className=\"meta\" onClick={this.handleToggle}>\n          {header}\n        </div>\n        <AnimateHeight className=\"details\" height={this.state.expanded ? 'auto' : 0}>\n          {children}\n        </AnimateHeight>\n      </Element>\n    );\n  }\n}\n\nexport default Expandable;","import React from 'react';\n\n// https://thenounproject.com/search/?q=information&i=1281662\n// Created by Wawan Hermawan from the Noun Project\nconst Icon = ({ ...other }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" className=\"icon\" {...other}>\n    <path d=\"M53.1,73h-7.2c-1.1,0-1.9-0.9-1.9-1.9V44h11v27.1C55,72.1,54.1,73,53.1,73z\" />\n    <path d=\"M55,39H44v-9.1c0-1.1,0.9-1.9,1.9-1.9h7.2c1.1,0,1.9,0.9,1.9,1.9V39z\" />\n    <path d=\"M50,96C24.6,96,4,75.4,4,50S24.6,4,50,4s46,20.6,46,46S75.4,96,50,96z M50,12c-21,0-38,17-38,38s17,38,38,38s38-17,38-38   S71,12,50,12z\" />\n  </svg>\n);\n\nexport default Icon;","import React from 'react';\nimport Expandable from './Expandable';\nimport { PERFORMANCE_METHOD } from '../App';\nimport InformationIcon from '../icons/Information'\n\nclass Rule extends React.PureComponent {\n  render () {\n    const {name, description, performance, performanceMethod, target, children} = this.props;\n    var width;\n    switch(performanceMethod) {\n      case PERFORMANCE_METHOD.MINIMUM:\n\t    width = performance / target * 100;\n\t    break;\n\t  case PERFORMANCE_METHOD.MAXIMUM:\n\t    width = target / performance * 100;\n\t    break;\n\t  case PERFORMANCE_METHOD.BOOLEAN:\n\t    console.log(performanceMethod);\n\t  \twidth = target === performance ? 100 : 0;\n\t    break;\n\t  default:\n\t  \twidth = 50;\n    }\n    width = Math.max(0, Math.min(100, width));\n    const color = width > 75 ? \"#FAB700\" : \"#AC1F39\"\n\n\n  \treturn (\n      <Expandable\n        element=\"li\"\n        className={width > 75 ? 'passed' :'failed'}\n        header={(\n          <div className=\"flex wrappable\">\n            <div className=\"flex-main name\">{name}</div>\n            <div className=\"flex-sub perf\">\n              <div className=\"perf-container\">\n                <div className=\"perf-bar\" style={{width: width + \"%\", backgroundColor: color}}></div>\n              </div>\n            </div>\n            <div className=\"flex-sub chevron\">\n              <div><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 9\" className=\"icon\"><path d=\"M14.0059397,2.26485497e-14 C15.1072288,2.26485497e-14 15.3722573,0.627746582 14.5881847,1.41182411 L8.70999225,7.29005337 C8.317902,7.68214607 7.67653023,7.6764822 7.29009898,7.29005337 L1.41183294,1.41182411 C0.632099139,0.632095183 0.894513756,2.26485497e-14 1.99406028,2.26485497e-14 L14.0059397,2.26485497e-14 Z\"></path></svg></div>\n            </div>\n          </div>\n        )}\n        ref={React.createRef()}\n      >\n        <div className=\"row text-muted description\">\n          <InformationIcon />\n          <div className=\"col-md-12\">\n            {description}\n          </div>\n        </div>\n        <div className=\"row\">\n          {children}\n        </div>\n      </Expandable>\n    );\n  }\n}\n\nexport default Rule;","import React from 'react';\nimport './Checklist.scss';\n\nconst Checklist = ({ children }) => (\n  <div className=\"panel\">\n    <div className=\"panel-heading\">\n      <h1>Habits</h1>\n      <small>A quick overview of the habits of high win-rate drafters, and how your statistics compare to those. Optimizing these metrics isn't always right, but they may still help you identify areas for improvement.</small>\n    </div>\n    <div className=\"panel-body\">\n      <ul className=\"checklist\">\n        {children}\n      </ul>\n    </div>\n  </div>\n);\n\nexport default Checklist;","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nconst Card = ({ name, link }) => (\n  <a data-tip data-for={name} href={link}>{name}\n  <ReactTooltip id={name} place=\"top\" effect=\"solid\">\n    <img src={link} style={{width: \"250px\"}}/>\n  </ReactTooltip>\n  </a>\n);\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst Pick = ({ higherLink, higherName, pickedLink, pickedName, link }) => (\n  <div>\n    You picked <Card name={pickedName} link={pickedLink} /> over <Card name={higherName} link={higherLink} /> even though it's graded lower: <a href={link}>{link}</a>\n  </div>\n);\n\nexport default Pick;","import React from 'react';\nimport './App.scss';\nimport Rule from './components/Rule';\nimport Checklist from './components/Checklist';\nimport Pick from './components/Pick';\n\nexport const PERFORMANCE_METHOD = {\n  BOOLEAN: 'BOOLEAN',\n  MINIMUM: 'MINIMUM',\n  MAXIMUM: 'MAXIMUM',\n};\nconst rules = [];\n\nrules.push(<Rule\n  name=\"Prepare by making a tier list\"\n  description={(<>\n    70% of the high win-rate drafters on 17Lands have made their own tier list (vs 51% in the comparisson group). Making a tier list familiarizes you with the cards in a set, allowing you to focus on draft-specific context while making picks. Tier lists also help to grow your card evaluation skills by comparing with experts. Complete this by moving cards out of TBD in your tier list here: <a href=\"https://www.17lands.com/card_tiers/ZNR\">https://www.17lands.com/card_tiers/ZNR</a>.\n  </>)}\n  performance={0}\n  performanceMethod={PERFORMANCE_METHOD.MINIMUM}\n  target={265}\n  children={<div>Cards you have ranked: 0 / 265</div>}\n/>);\nrules.push(<Rule\n  name=\"Follow your tier list early on\"\n  description=\"Your first several picks should usually use your tier list's ordering within a color. Below are any recent times that did not happen. Cards that are tbd on your tier list were ranked using other users' tier lists and picks.\"\n  performance=\"0.107\"\n  performanceMethod={PERFORMANCE_METHOD.MAXIMUM}\n  target=\"0.06\"\n  children={<div>\n    You picked lower-ranked cards in 10.7% of your early picks. (Goal: 6%)\n    <ul>\n      <li><Pick higherLink=\"https://c1.scryfall.com/file/scryfall-cards/border_crop/front/1/1/112077b8-1514-4320-a70f-b23f3c7ce18a.jpg?1598989632\" higherName=\"Merfolk Windrobber\" pickedLink=\"https://c1.scryfall.com/file/scryfall-cards/border_crop/front/f/6/f6455009-030c-4a33-a60b-80863d8f8aaf.jpg?1599564503\" pickedName=\"Risen Riptide\" link=\"https://www.17lands.com/draft/cf5353d791c841c7a98ee8e75f9fa9db/1/4\" /></li>\n      <li><Pick higherLink=\"https://c1.scryfall.com/file/scryfall-cards/border_crop/front/f/2/f25d56f9-aa54-4657-9ac9-e93fbba3e715.jpg?1599058079\" higherName=\"Sejiri Shelter\" pickedLink=\"https://c1.scryfall.com/file/scryfall-cards/border_crop/front/b/8/b83cfbaa-7890-4f6f-878b-4edb45677371.jpg?1599009679\" pickedName=\"Skyclave Apparition\" link=\"https://www.17lands.com/draft/11375a76e01f483aa88f549f67fe9435\" /></li>\n    </ul>\n  </div>}\n/>);\nrules.push(<Rule\n  name=\"Move off of B cards' colors when appropriate\"\n  description=\"High win-rate drafters pivot away from B-level cards 26% of the time (vs 23% in the comparisson group). You should play most of your B-level picks, but think about switching colors/archetypes if your early picks aren't A's and the lane seems closed in your seat.\"\n  performance=\"0.248\"\n  performanceMethod={PERFORMANCE_METHOD.MINIMUM}\n  target=\"0.26\"\n  children={<div>You moved off of 24.8% of your early B-level picks. (Goal: 26%)</div>}\n/>);\nrules.push(<Rule\n  name=\"Use rarity blinders when evaluating cards\"\n  description=\"Take commons over uncommons of the same color when they are stronger or fit your deck better. High win-rate drafters take commons over uncommons within the same color 25% of the time (vs 24% in the comparisson group, but with a much higher sample size than the other habits).\"\n  performance=\"0.203\"\n  performanceMethod={PERFORMANCE_METHOD.MINIMUM}\n  target=\"0.25\"\n  children={<div>You took commons over uncommons 20.3% of the time. (Goal: 25%)</div>}\n/>);\nrules.push(<Rule\n  name=\"Alter your pick order in pack 3\"\n  description=\"Build your deck as you draft, and use you last pack to fill holes in your build. Successful players take cards that are lower on their tier list 1.2% of the time in Pack 3.\"\n  performance=\"0.011\"\n  performanceMethod={PERFORMANCE_METHOD.MINIMUM}\n  target=\"0.012\"\n  children={<div>You altered 1.1% of your picks in Pack 3. (Goal: 1.2%)</div>}\n/>);\nrules.push(<Rule\n  name=\"Only mulligan when absolutely necessary\"\n  description=\"Draft, build, and play so that you rarely mulligan in limited. Higher win-rate players mulligan in 10.5% of games. But you should still be thoughtful about what hands can't win the game!\"\n  performance=\"0.167\"\n  performanceMethod={PERFORMANCE_METHOD.MAXIMUM}\n  target=\"0.105\"\n  children={<div>You mulliganned 16.7% of the time. (Goal: 10.5%)</div>}\n/>);\nrules.push(<Rule\n  name=\"Play to the fast speed of this format\"\n  description=\"Players with higher win-rates get more of their edge from shorter games in faster formats. Draft and build based on the speed of the set. Focus especially on winning the shorter games this set. High win-rate players had +15% win-rate over the comparisson group in games that lasted at most 9 turns (vs +11% win-rate for games that at least 13 turns). Try to improve your win-rate in short games to be 4% higher than your win rate in long games by lowering your curve and making more aggressive decks.\"\n  performance=\"-0.012\"\n  performanceMethod={PERFORMANCE_METHOD.MINIMUM}\n  target=\"0.04\"\n  children={<div>\n    <div>Your win-rate is 1.2% lower in short games than in long games. (Goal: 4% higher)</div>\n    <div>Your win-rate for games at most 9 turns: 49.2%</div>\n    <div>Your win-rate for games at least 13 turns: 50.4%</div>\n  </div>}\n/>);\nrules.push(<Rule\n  name=\"Make only minor sideboarding changes\"\n  description=\"Don't sacrifice too much deck quality when sideboarding. Make swaps only in the rare cases when you can address a specific strategy very well, and otherwise maintain the synergy, curve, and quality of your original build. High win-rate drafters only substute an averge of 0.25 cards when sideboarding.\"\n  performance=\"0.84\"\n  performanceMethod={PERFORMANCE_METHOD.MAXIMUM}\n  target=\"0.25\"\n  children={<div>\n    <div>You changed an average of 0.84 cards when sideboarding. (Goal: 0.25).</div>\n    <ul>\n    <li><div>You changed 4 cards when sideboarding here: <a href=\"https://www.17lands.com/deck/3973b55b6eb344a98b65cf0b614cb384/2\">https://www.17lands.com/deck/3973b55b6eb344a98b65cf0b614cb384/2</a></div></li>\n    <li><div>You changed 2 cards when sideboarding here: <a href=\"https://www.17lands.com/deck/6122837c777c4d00a81b93d1beef2f20/1\">https://www.17lands.com/deck/6122837c777c4d00a81b93d1beef2f20/1</a></div></li>\n    </ul>\n  </div>}\n/>);\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Checklist children={rules} />\n      <div className=\"panel\">\n        <div className=\"panel-heading\">\n          <small>High win-rate drafters for this format is a cohort of 52 users with win-rates in Platinum/Diamond/Mythic of at least 62%. The comparisson group is 112 drafters with an average win-rate in Platinum/Diamond/Mythic of 49%. For more information on these habits, listen to <a href=\"https://limitedlevelups.libsyn.com/limited-level-ups-37-7-habits-of-highly-effective-drafters-with-17land-dev-viralmisnomer\">Limited Level-Ups 37</a>.</small>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<div className=\"container\">\n\t    <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}